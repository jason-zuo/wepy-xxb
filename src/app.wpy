<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import { 
   USER_SPECICAL_INFO ,
   USER_INFO
} from './untils/contant'

import {
   getUserCode ,
   updateUser 
} from './api/apilist' 
export default class extends wepy.app {
  config = {
    pages: [
      'pages/index' ,
      'pages/imgSave' ,
      'pages/course'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#ffd845',
      navigationBarTitleText: '课程详情',
      navigationBarTextStyle: 'black'
    },
    
  }

  globalData = {
    userInfo: null,
  }

  constructor () {
    super();
    this.use('requestfix');
    this.use('promisify');
  }

  async onLaunch() {
    let _that = this ;
    let userInfo = wepy.getStorageSync(USER_INFO) || {};
        wx.login({
          success: function(res) {
            console.log("=========="+res.code);
            if (res.code) {
              //发起网络请求
              _that.getUserCodeHtp(res.code);
            } else {
              console.log('获取用户登录态失败！' + res.errMsg)
            }
          }
        });
  }        

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }
 
  async getUserCodeHtp (code) {
      let _this = this ;
      getUserCode({
          query: {
            code: code
          }
        }).then(resp => {
           var rlt = resp.data;
           //存储token
           wepy.setStorageSync(USER_SPECICAL_INFO, rlt.result.token);
           if (rlt.result.new == true) {
               //说明是新用户
              wx.getUserInfo({
                success: function(res) {
                  let userInfo = res.userInfo ;
                  wepy.setStorageSync(USER_INFO, userInfo);
                  _this.updateUser(userInfo, rlt.result.token) ;
                }
              })
           }
        });
  }

  updateUser (userInfo, token) {
       let _this = this ;
        updateUser({
             query : {
                nickname : userInfo.nickName ,
                headimgurl : userInfo.avatarUrl ,
                sex : userInfo.gender ,
                token : token
            }
          }).then(resp => {
            var rlt = resp.data;
            //存储token
            console.log(rlt)
          });
  }

  async testAsync () {
    const data = await this.sleep(3)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
